version: '3'
services:
  nginx:
    container_name: stackprior-nginx
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on: 
      - lets-chat-1
      - lets-chat-2
      - lets-chat-3
    networks: 
      - proxies
      - back-end
    expose:
      - 80
  mongodb:
    container_name: stackprior-mongodb
    image: mongo:latest
    volumes:
      - ./data/db:/data/db
    environment: 
      MONGO_INITDB_ROOT_USERNAME: ${DB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASS}
  api:
    container_name: stackprior-api
    build:
      context: ./api
    volumes:
      - ./api:/api
      - ./nginx:/nginx
      - /var/run/docker.sock:/var/run/docker.sock
    environment: 
      PORT: 8080
      DB_HOST: mongodb
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      NGINX_CONFIG_FILE: /nginx/nginx.conf
      NGINX_CONTAINER_NAME: stackprior-nginx
      DOCKER_UNIX_SOCKET: /var/run/docker.sock
    ports:
      - 8080:8080
    depends_on: 
      - nginx
      - mongodb
  mqueue:
    container_name: stackprior-mqueue
    build:
      context: ./mqueue
    command: python __init__.py nginx 80 0.0.0.0 80
    volumes:
      - ./mqueue:/mqueue
      - ./nginx:/nginx
    ports:
      - 80:80
    networks: 
      - proxies
  mongo:
    image: mongo
    logging:
      driver: none
    networks: 
      - back-end
  lets-chat-1:
    image: sdelements/lets-chat
    environment: 
      NODE_ENV: dev
      DEBUG: '*'
    depends_on:
      - mongo
    networks: 
      - back-end
  lets-chat-2:
    image: sdelements/lets-chat
    environment: 
      NODE_ENV: dev
      DEBUG: '*'
    depends_on:
      - mongo
    networks: 
      - back-end
  lets-chat-3:
    image: sdelements/lets-chat
    environment: 
      NODE_ENV: dev
      DEBUG: '*'
    depends_on:
      - mongo
    networks: 
      - back-end

networks:
  proxies:
    driver: bridge
  back-end: